name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      create_github_release:
        description: 'Create GitHub Release'
        required: true
        type: boolean
        default: true
  workflow_call:
    inputs:
      version_type:
        description: 'Version type'
        required: true
        type: string
      create_github_release:
        description: 'Create GitHub Release'
        required: true
        type: boolean
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run tests
        run: pnpm test
      
      - name: Run linting
        run: pnpm lint
      
      - name: Prepare for type checking
        run: pnpm run dev:prepare
        
      - name: Run type checking
        run: pnpm run test:types
      
      - name: Run security audit
        run: pnpm audit
      
      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Bump version
        id: bump_version
        run: |
          VERSION_TYPE=${{ github.event.inputs.version_type || inputs.version_type }}
          NEW_VERSION=$(npm version $VERSION_TYPE --no-git-tag-version)
          echo "new_version=${NEW_VERSION#v}" >> $GITHUB_OUTPUT
      
      - name: Update CHANGELOG
        run: npx changelogen --no-output
      
      - name: Commit version bump
        run: |
          git add package.json CHANGELOG.md
          git commit -m "chore(release): v${{ steps.bump_version.outputs.new_version }}"
      
      - name: Create git tag
        run: git tag -a "v${{ steps.bump_version.outputs.new_version }}" -m "Release v${{ steps.bump_version.outputs.new_version }}"
      
      - name: Build module
        run: pnpm run prepack
      
      - name: Publish to npm
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "‚ùå NPM_TOKEN secret not found. Please set it in repository settings."
            exit 1
          fi
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Push changes
        run: git push origin main --follow-tags
      
      - name: Create GitHub Release
        if: ${{ github.event.inputs.create_github_release == 'true' || inputs.create_github_release == true }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}